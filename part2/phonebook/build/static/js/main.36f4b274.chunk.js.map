{"version":3,"sources":["components/Filter.js","components/notification.js","components/PersonForm.js","components/Persons.js","services/phonebook.js","App.js","index.js"],"names":["Filter","value","onChange","Notification","alert","className","level","message","PersonForm","onSubmit","nameRef","name","handleNameChange","number","handleNumberChange","ref","type","Persons","list","deleteHandler","style","listStyle","padding","map","person","key","id","onClick","axios","get","then","response","data","newPerson","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notification","setNotification","useEffect","phonebook","initialEntries","catch","error","console","log","nameInputEl","useRef","clearForm","current","focus","showNotification","setTimeout","listToShow","useMemo","toLowerCase","includes","trim","e","target","preventDefault","existingPerson","find","window","confirm","updatedPersons","p","persistedPerson","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36f4b274.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ value, onChange }) => (\n  <>\n    filter shown with <input value={value} onChange={onChange} />{\" \"}\n  </>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ alert }) => {\n  return (\n    <div className={`notification ${alert && alert.level}`}>\n      {alert ? alert.message : \"\\u00A0\"}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst PersonForm = ({\n  onSubmit,\n  nameRef,\n  name,\n  handleNameChange,\n  number,\n  handleNumberChange\n}) => (\n  <form onSubmit={onSubmit}>\n    <div>\n      name: <input ref={nameRef} value={name} onChange={handleNameChange} />\n    </div>\n    <div>\n      number: <input value={number} onChange={handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ list, deleteHandler }) => (\n  <ul style={{ listStyle: \"none\", padding: 0 }}>\n    {list\n      ? list.map(person => (\n          <li key={person.id}>\n            {person.name} {person.number}\n            <button onClick={deleteHandler(person.id)}>delete</button>\n          </li>\n        ))\n      : \"List empty\"}\n  </ul>\n);\n\nexport default Persons;\n","import axios from \"axios\";\n\nconst BASE_URL = \"/api/persons\";\n\nconst getAll = () => axios.get(BASE_URL).then(response => response.data);\n\nconst create = newPerson =>\n  axios.post(BASE_URL, newPerson).then(response => response.data);\n\nconst update = (id, newPerson) =>\n  axios.put(`${BASE_URL}/${id}`, newPerson).then(response => response.data);\n\nconst remove = id =>\n  axios.delete(`${BASE_URL}/${id}`).then(response => response.data);\n\nexport default { getAll, create, update, remove };\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/notification\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport phonebook from \"./services/phonebook\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    phonebook\n      .getAll()\n      .then(initialEntries => {\n        setPersons(initialEntries);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const nameInputEl = useRef(null);\n\n  const clearForm = () => {\n    setNewNumber(\"\");\n    setNewName(\"\");\n    nameInputEl.current.focus();\n  };\n\n  const showNotification = ({ level = \"info\", message = \"\" }) => {\n    setNotification({\n      level,\n      message\n    });\n    setTimeout(() => {\n      setNotification(null);\n    }, 3000);\n  };\n\n  const addPerson = e => {\n    e.preventDefault();\n    let existingPerson = persons.find(\n      person =>\n        person.name.trim().toLowerCase() === newName.trim().toLowerCase()\n    );\n    if (existingPerson) {\n      let updatePerson = window.confirm(\n        `${existingPerson.name} is already in the phonebook, replace the old number with the new one?`\n      );\n      if (updatePerson) {\n        phonebook\n          .update(existingPerson.id, {\n            name: existingPerson.name,\n            number: newNumber\n          })\n          .then(() => {\n            let updatedPersons = persons.map(person =>\n              person.id === existingPerson.id\n                ? { ...existingPerson, number: newNumber }\n                : person\n            );\n            setPersons(updatedPersons);\n            clearForm();\n            setNotification({\n              level: \"success\",\n              message: `${existingPerson.name} has been updated!`\n            });\n            setTimeout(() => {\n              setNotification(null);\n            }, 3000);\n          })\n          .catch(error => {\n            showNotification({\n              level: \"error\",\n              message: \"This person has been removed from the server.\"\n            });\n            setPersons(persons.filter(p => p.id !== existingPerson.id));\n          });\n      }\n    } else {\n      const newPerson = {\n        name: newName.trim(),\n        number: newNumber.trim()\n      };\n      phonebook.create(newPerson).then(persistedPerson => {\n        const p = { ...newPerson, id: persistedPerson.id };\n        setPersons([...persons, p]);\n        showNotification({\n          level: \"success\",\n          message: `${newPerson.name} has been added!`\n        });\n        clearForm();\n      });\n    }\n  };\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const handlePersonDeletion = id => () => {\n    let personToDelete = persons.find(p => p.id === id);\n    let deletePerson = window.confirm(`Delete ${personToDelete.name}?`);\n    if (deletePerson) {\n      phonebook\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id));\n          showNotification({\n            level: \"success\",\n            message: `${personToDelete.name} removed!`\n          });\n        })\n        .catch(error => {\n          setPersons(persons.filter(p => p.id !== id));\n          showNotification({\n            level: \"error\",\n            message: \"This person had already been removed from the server.\"\n          });\n        });\n    }\n  };\n\n  // useMemo not necessary in this case but wanted to avoid filtering on each render\n  const listToShow = useMemo(\n    () =>\n      filter\n        ? persons.filter(person =>\n            person.name.toLowerCase().includes(filter.trim().toLowerCase())\n          )\n        : persons,\n    [persons, filter]\n  );\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification alert={notification} />\n      <Filter value={filter} onChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        onSubmit={addPerson}\n        nameRef={nameInputEl}\n        name={newName}\n        handleNameChange={handleNameChange}\n        number={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons list={listToShow} deleteHandler={handlePersonDeletion} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}